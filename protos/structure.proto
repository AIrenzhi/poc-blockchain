syntax = "proto3";


enum Action {
    CREATEUSER = 0;
    CHANGEUSER = 5;
    INSERTINFO = 1;
    UPDATEINFO = 2;
    DELETEINFO = 3;
    CHANGESTATUS = 4;
    CREATECONCEPT = 6;
    UPDATECONCEPT = 7;
    DELETECONCEPT = 8;
    CREATEROLE = 9;
    UPDATEROLE = 10;
    DELETEROLE = 11;
    CREATELOG = 12;
}

message Payload {

    Action action = 1;

    uint64 timestamp = 2;

    map<string, string> publicKey = 3;

    CreateRoleAction createRole = 4;
    UpdateRoleAction updateRole = 5;
    DeleteRoleAction deleteRole = 6;
    CreateUserAction createUser = 7;
    ChangeUserInfoAction changeUser = 8;
    CreateConceptAction createConcept = 9;
    UpdateConceptAction updateConcept = 10;
    DeleteConceptAction deleteConcept = 11;
    InsertEntityAction insertInfo = 12;
    UpdateEntityAction updateInfo = 13;
//    ChangeStatusAction changeStatus = 14;
    DeleteEntityAction deleteInfo = 15;
};

message Role{

    string uuid = 3;

    string name = 1;

    repeated Action actions = 2;

    uint64 timestamp = 4;
}

message RoleContainer {

    repeated Role roles = 1;
}

message CreateRoleAction {

    Role role = 1;
}

message UpdateRoleAction {

    string uuid = 1;

    Role role = 2;
}

message DeleteRoleAction {

    string uuid = 1;

}


message User {
    string key = 1;

    string name = 2;

    repeated Role roles = 3;

    uint64 timestamp = 4;
}

message UserContainer{


    repeated User users = 1;

}

// 创建用户
message CreateUserAction {

    User user = 1;
}

message ChangeUserInfoAction {

    User user = 1;
}

// ** BOM 配置

message Concept{
    string name = 1;

    repeated string keys = 2;

    repeated string childs = 3;

    uint64 timestamp = 4;

    string uuid = 5;
}

message ConceptContainer {


    repeated Concept concepts = 1;
}

// 创建
message CreateConceptAction{

    Concept concept = 1;
}

message UpdateConceptAction{

    Concept concept = 1;
}

message DeleteConceptAction{

    string uuid = 1;
}


// ** 设备实体操作

message Entity {
    string uuid = 1;  //设备编号

    string name = 8;

    map<string, string> properties = 2;

    repeated Entity childs = 3;

    string publicKey = 4;

    string status = 5; //状态

    uint64 timestamp = 7;

    repeated Role roles = 9;
}

message EntityContainer {
    repeated Entity entitys = 1;
}

// 新增
message InsertEntityAction {

    Entity entity = 1;
}



message UpdateEntityAction {
    string uuid = 1; //设备编号

    Entity entity = 2;

}

// * 改变设备状态
//message ChangeStatusAction {
//
//    string uuid = 1;
//
//    string status = 2;
//}

// 删除
message DeleteEntityAction {

    string uuid = 1;

}


message Log  {
    string uuid = 1;
    string summary = 2;  // 日志概要
    string user_public_key = 3;  //  日志对应的操作人的publicKey
    string concept_public_key = 4;  // 日志对应操作的concept的publicKey
    string type = 5;  //日志类型 Create add replace repair 等
    uint64 timestamp = 6; // 创建时间
}

message LogContainer{

    repeated Log logs = 1;
}

message CreateLogAction {

    Log log = 1;

}
